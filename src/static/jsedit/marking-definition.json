{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "marking-definition",
    "description": "The marking-definition object represents a specific marking.",
    "type": "object",
    "properties": {
        "id": {
            "title": "id",
            "pattern": "^marking-definition--",
            "default": "marking-definition--",
            "type": "string",
            "readonly": "true"
        },
        "type": {
            "type": "string",
            "description": "The type of this object, which MUST be the literal `marking-definition`.",
            "default": "marking-definition",
            "readonly": "true"
        },
        "name" : {
            "type" : "string",
            "description": "A name used to identify the Marking Definition."
        },
        "definition_type": {
            "type": "string",
            "description": "The definition_type property identifies the type of Marking Definition.",
            "$ref": "#/definitions/marking-definition-type"
        },
        "definition": {
            "type": "object",
            "description": "The definition property contains the marking object itself.",
            "properties": {
                "statement": {
                    "type": "string",
                    "defintion": "A Statement (e.g., copyright, terms of use) applied to the content marked by this marking definition."
                },
                "tlp": {
                    "type": "string",
                    "defintion": "The TLP level of the content marked by this marking definition, as defined in this section.",
                    "$ref": "#/definitions/tlp-level"
                }
            }
        },
        "spec_version": {
            "type": "string",
            "enum": [
                "2.1",
                "2.0"
            ],
            "description": "The version of the STIX specification used to represent this object."
        },
        "created": {
            "type": "string",
            "format": "datetime-local",
            "options": {
                "flatpickr": {
                    "inlineHideInput": true,
                    "wrap": true,
                    "allowInput": true,
                    "dateFormat": "Z"
                }
            }
        },
        "created_by_ref": {
            "type": "string",
            "default": ""
        },
        "external_references": {
            "type": "array",
            "format": "tabs",
            "items": {
                "type": "object",
                "properties": {
                    "source_name": {
                        "type": "string",
                        "description": "The source within which the external-reference is defined (system, registry, organization, etc.)"
                    },
                    "external_id": {
                        "type": "string",
                        "description": "An identifier for the external reference content."
                    },
                    "url": {
                        "type": "string",
                        "title": "url",
                        "pattern": "^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\\.(?:[a-z\u00a1-\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$",
                        "description": "Matches the elements of a URL using a regular expression. Uses Diego Perini's regex from https://gist.github.com/dperini/729294."
                    },
                    "description": {
                        "type": "string",
                        "description": "A human readable description"
                    }
                }
            }
        },
        "object_marking_refs": {
            "type": "array",
            "format": "table",
            "uniqueItems": true,
            "items": {
                "type": "string"
            },
            "description": "The list of marking-definition objects to be applied to this object."
        },
        "granular_markings": {
            "type": "array",
            "format": "tabs",
            "items": {
                "title": "granular-marking",
                "description": "The granular-marking type defines how the list of marking-definition objects referenced by the marking_refs property to apply to a set of content identified by the list of selectors in the selectors property.",
                "type": "object",
                "properties": {
                    "marking_ref": {
                        "type": "string",
                        "title": "identifier",
                        "pattern": "^[a-z][a-z-]+[a-z]--[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                        "description": "Represents identifiers across the CTI specifications. The format consists of the name of the top-level object being identified, followed by two dashes (--), followed by a UUIDv4."
                    },
                    "selectors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minItems": 1
                        },
                        "description": "A list of selectors for content contained within the STIX object in which this property appears."
                    }
                },
                "required": [
                    "selectors",
                    "marking_ref"
                ]
            }
        }   
    },
    "required": [
    ],
    "definitions": {
        "marking-definition-type": {
            "type": "string",
            "enum": [
                "statement",
                "tlp"
            ]
        },
        "tlp-level": {
            "type": "string",
            "enum": [
                "white",
                "green",
                "amber",
                "red"
            ]
        }
    }
}
